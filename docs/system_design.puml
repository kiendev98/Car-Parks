@startuml system_design
top to bottom direction
allowmixing

frame "data migration" {
    class LiquibaseCarParkMigrator {
        + void execute()
    }

    class LatLonCoordinate {
        + LatLonCoordinate computeSVY21(SVY21Coordinate svy21)
    }

    file cvsFile
}

frame "system" {
    frame "inbound" {
        class CarParkController {
            + List<NearestCarPark> findNearestCarParks(Double latitude, Double longitude, Integer page, Integer pageSize)
        }
    }

    frame "domain" {
        !include domain.puml
        class CarParkService {
            + List<NearestCarPark> findNearestAvailableCarParks(Coordinate coordinate)
            + List<NearestCarPark> findNearestAvailableCarParks(Coordinate coordinate, NearestCarParkPage page)
        }

        interface CarParkRepository {
            + List<CarPark> findNearestCarParksInIds(\n\tCoordinate coordinate, \n\tSet<String> findNearestCarParksInIds, \n\tNearestCarParkPage page\n)
        }

        interface CarParkQueryService{
            + List<AvailableCarPark> findAvailableCarParks();
        }
    }

    frame "outbound" {
        frame "client" {
            class SingaporeCarParkAvailabilityClient {
                List<AvailableCarPark> findAvailableCarParks()
            }
        }

        frame "persistence" {
            class PostgisCarParkRepository {
                List<CarPark> findNearestCarParksInIds()
            }
        }
    }
}

database "PostgisDataBase" as db

CarParkController --* CarParkService
CarParkService --* CarParkQueryService
CarParkService --* CarParkRepository
CarParkRepository <|-- PostgisCarParkRepository
CarParkQueryService <|-- SingaporeCarParkAvailabilityClient
LiquibaseCarParkMigrator --* LatLonCoordinate
LiquibaseCarParkMigrator --> db: <<import data>>
PostgisCarParkRepository --> db: <<query data>>
LiquibaseCarParkMigrator --> cvsFile: <<read data>>
@enduml